<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ToDoApp"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    x:Class="ToDoApp.View.AppDictionary"
                    x:ClassModifier="public">
    <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
    
    <DataTemplate x:Key="SidebarItemTemplate">
        <StackPanel Height="30" Orientation="Horizontal">
            <TextBox x:Name="ToDoListItemTextBox" VerticalContentAlignment="Center" BorderThickness="0"
                     IsReadOnly="True" IsReadOnlyCaretVisible="False"
                     Text="{Binding Name}"
                     MouseDoubleClick="ToDoListItemTextBox_MouseDoubleClick" 
                     LostFocus="ToDoListItemTextBox_LostFocus">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="LostFocus">
                        <i:InvokeCommandAction Command="{Binding DataContext.EditListNameCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                               CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <Button Command="{Binding DataContext.DeleteListCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" 
                    Content="X"/>
        </StackPanel>
    </DataTemplate>
    
    <Style x:Key="ListBoxStyle">
        <Setter Property="ListBox.ItemTemplate" Value="{StaticResource SidebarItemTemplate}"/>
        <Setter Property="ListBox.BorderBrush" Value="{x:Null}"/>
    </Style>

    <DataTemplate x:Key="TaskTemplate">
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <CheckBox IsChecked="{Binding IsDone}"/>
                <TextBlock Text="{Binding Name}"/>            
            </StackPanel>
            <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft">
                <Button Visibility="{Binding DataContext.IsNotTaskEditing, Converter={StaticResource VisibilityConverter}, RelativeSource={RelativeSource AncestorType=ListBox}}" 
                        Command="{Binding DataContext.DeleteTaskCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}"
                        Content="Удалить"/>
                <Button x:Name="EditTaskButton" 
                        Visibility="{Binding DataContext.IsNotTaskEditing, Converter={StaticResource VisibilityConverter}, RelativeSource={RelativeSource AncestorType=ListBox}}"
                        Command="{Binding DataContext.EditTaskCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}"
                        Content="Редактировать" />                
                <TextBlock Text="{Binding TextPriority}"/>
                <TextBlock Text="{Binding TextRepeating}"/>
                <TextBlock Text="{Binding TextDateTime}"/> 
            </StackPanel>
        </StackPanel>
    </DataTemplate>
    
</ResourceDictionary>